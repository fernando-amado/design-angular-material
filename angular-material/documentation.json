{
    "pipes": [],
    "interfaces": [
        {
            "name": "Transaction",
            "id": "interface-Transaction-3fa738f9d16b58dc25984b44cdda6a0ddffcbb8de2a6af55ff61f0fe9d109d4d6950b9c672aaa0ff092e19d4114df08f4be7ea4cd25697fa6b53d913f407ecd8",
            "file": "src/app/app.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\ninterface Transaction {\r\n  item: string;\r\n  cost: number;\r\n}\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  displayedColumns: string[] = ['item', 'cost'];\r\n  transactions: Transaction[] = [\r\n    {item: 'Beach ball', cost: 4},\r\n    {item: 'Towel', cost: 5},\r\n    {item: 'Frisbee', cost: 2},\r\n    {item: 'Sunscreen', cost: 4},\r\n    {item: 'Cooler', cost: 25},\r\n    {item: 'Swim suit', cost: 15},\r\n  ];\r\n\r\n  /** Gets the total cost of all transactions. */\r\n  getTotalCost() {\r\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "cost",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "SizeDirective",
            "id": "directive-SizeDirective-ea31c42c19afb1855c21663203854642dfb63ef6ba5089c80f1d84984d165fe696fb000c9bb90656ab375858ef9cf0e2360a686d50d8ce5041423854700d258f",
            "file": "src/app/Directivas/size.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\r\n@Directive({\r\n  selector: '[size]',\r\n})\r\nexport class SizeDirective {\r\n  constructor(private el: ElementRef) {\r\n    el.nativeElement.style.customProperty = true;\r\n  }\r\n  @Input() size: any;\r\n  ngOnChanges() {\r\n    let typeElement = this.el.nativeElement.localName;\r\n    function SetStyle(element: {\r\n        style: {height: string;paddingInline: string;\r\n        fontSize: string;padding: string;width: string;};\r\n        classList: { add: (arg0: string) => void };\r\n      },\r\n      heightCase: string,fontSizeCase: string,paddingInlineCase: string,\r\n      classCase: string,paddingCase: string,widthCase: string\r\n    ) {\r\n      if (heightCase) {element.style.height = heightCase;}\r\n      if (paddingInlineCase) {element.style.paddingInline = paddingInlineCase;}\r\n      if (fontSizeCase) {element.style.fontSize = fontSizeCase;}\r\n      if (classCase) {element.classList.add(classCase);}\r\n      if (paddingCase) {element.style.padding = paddingCase;}\r\n      if (widthCase) {element.style.width = widthCase;}\r\n    }\r\n    switch (this.size) {\r\n      case 'small':\r\n        if (typeElement === 'mat-chip') {\r\n          SetStyle(this.el.nativeElement,\r\n            '24px','13px','8px',\r\n            'undefined','undefined','undefined'\r\n          );\r\n        }\r\n        if (typeElement === 'mat-chip-option') {\r\n          SetStyle(this.el.nativeElement,\r\n            '24px','13px','8px',\r\n            'undefined','undefined','undefined'\r\n          );\r\n        } else if (typeElement === 'button') {\r\n          SetStyle(this.el.nativeElement,\r\n            '32px','13px','undefined',\r\n            'undefined','undefined','undefined'\r\n          );\r\n        } else if (typeElement === 'mat-form-field') {\r\n          SetStyle(this.el.nativeElement,\r\n            '70px','16px','undefined',\r\n            'small','undefined','undefined'\r\n          );\r\n        } else if (typeElement === 'mat-checkbox' || typeElement === 'mat-slider' ||\r\n          typeElement === 'mat-radio-button' || typeElement === 'mat-spinner' ||\r\n          typeElement === 'table' || typeElement === 'mat-table'\r\n        ) {\r\n          SetStyle(this.el.nativeElement,\r\n            'undefined','undefined','undefined',\r\n            'small','undefined','undefined'\r\n          );\r\n        } else if (typeElement === 'mat-icon') {\r\n          SetStyle(this.el.nativeElement,\r\n            'undefined','20px','undefined',\r\n            'undefined','undefined','undefined'\r\n          );\r\n        }\r\n        return;\r\n      case 'large':\r\n        if (typeElement === 'button') {\r\n          SetStyle(this.el.nativeElement,\r\n            'undefined','15px','udenfined',\r\n            'undefined','20px 18px','undefined'\r\n          );\r\n        } else if (typeElement === 'mat-checkbox' || typeElement === 'mat-radio-button'\r\n        ) {\r\n          SetStyle(this.el.nativeElement,\r\n            'undefined','undefined','undefined',\r\n            'large','undefined','undefined'\r\n          );\r\n        } else if (typeElement === 'mat-icon') {\r\n          SetStyle(this.el.nativeElement,\r\n            '30px','35px','undefined',\r\n            'undefined','undefined','33px'\r\n          );\r\n        }\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n}\r\n",
            "selector": "[size]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-3fa738f9d16b58dc25984b44cdda6a0ddffcbb8de2a6af55ff61f0fe9d109d4d6950b9c672aaa0ff092e19d4114df08f4be7ea4cd25697fa6b53d913f407ecd8",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayedColumns",
                    "defaultValue": "['item', 'cost']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "transactions",
                    "defaultValue": "[\r\n    {item: 'Beach ball', cost: 4},\r\n    {item: 'Towel', cost: 5},\r\n    {item: 'Frisbee', cost: 2},\r\n    {item: 'Sunscreen', cost: 4},\r\n    {item: 'Cooler', cost: 25},\r\n    {item: 'Swim suit', cost: 15},\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Transaction[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "getTotalCost",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nGets the total cost of all transactions.",
                    "description": "<p>Gets the total cost of all transactions.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\ninterface Transaction {\r\n  item: string;\r\n  cost: number;\r\n}\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  displayedColumns: string[] = ['item', 'cost'];\r\n  transactions: Transaction[] = [\r\n    {item: 'Beach ball', cost: 4},\r\n    {item: 'Towel', cost: 5},\r\n    {item: 'Frisbee', cost: 2},\r\n    {item: 'Sunscreen', cost: 4},\r\n    {item: 'Cooler', cost: 25},\r\n    {item: 'Swim suit', cost: 15},\r\n  ];\r\n\r\n  /** Gets the total cost of all transactions. */\r\n  getTotalCost() {\r\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": ""
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-03975ba1dc48c162bbd03d35705cf8e04246a47ffcbb0dcbe6a0901df62f204e52db135f0991c8eb03b51a6017535c3d7c0df4c511f35b20f6fb1b11e608ef47",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "template": "<button mat-button [ngClass]=\"classes\">{{label}}</button>",
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "tipo",
                    "defaultValue": "'raised'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-button',\r\n  templateUrl: './button.component.html',\r\n  template: `<button mat-button [ngClass]=\"classes\">{{label}}</button>`,\r\n  styleUrls: ['./button.component.scss']\r\n})\r\n\r\n\r\nexport class ButtonComponent {\r\n  @Input() label = 'Button'\r\n\r\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  @Input() tipo:  'raised'  = 'raised';\r\n\r\n  public get classes(): string[] {\r\n\r\n\r\n    return  ['app-button', `app-button--${this.size}` || 'app-button', `app-button--${this.tipo}`]\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-button--small {\r\n  font-size: 13px;\r\n  height: 32px;\r\n  padding-inline: 8px;\r\n}\r\n.app-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.app-button--large {\r\n  font-size: 15px;\r\n  padding: 19px 18px;\r\n}\r\n.app-button--raised {\r\n  background-color: #3f51b5;\r\n  color: white !important;\r\n  \r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 18
                    }
                }
            },
            "templateData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-9f319c93d3ce397c1b9aa11c0a54364d47a040669df99b7a402b70ff882f23fc3fa64e42a7cc0cf8dc2f2adae41ae94110527c9e332658db91c458a7590999fc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppComponent } from './app.component';\r\nimport { SizeDirective } from './Directivas/size.directive';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport {MatButtonModule} from '@angular/material/button'\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport { ButtonComponent } from './components/button/button.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SizeDirective,\r\n    ButtonComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "SizeDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "size",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/components/button/button.component.stories.ts": [
                {
                    "name": "size",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 4,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/Directivas/size.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SizeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 25,
                "coverageCount": "1/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Transaction",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "size",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            }
        ]
    }
}