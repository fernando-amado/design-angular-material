{
    "pipes": [],
    "interfaces": [
        {
            "name": "Component",
            "id": "interface-Component-38d1f7ea191176c7331fd42df78a5717261948bc060a17ccd7b0df5b83c6a2abd20304d243d77a07afdd52076de1c907ea7ec2712ea0a93abe463b4c167ca320",
            "file": "src/app/interfaces/Component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Component {\n  button: string;\n  matChip: string;\n  matChipOption: string;\n  matFormField: string;\n  matCheckBox: string;\n  matSlider: string;\n  matRadioButton: string;\n  matSpinner: string;\n  table: string;\n  matTable: string;\n  matIcon: string;\n}\n",
            "properties": [
                {
                    "name": "button",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "matCheckBox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "matChip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "matChipOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "matFormField",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "matIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "matRadioButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "matSlider",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "matSpinner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "matTable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "SizeDirective",
            "id": "directive-SizeDirective-effad0431b6060c9e9b66fcee7a4e51404d175300afb31fd008a66b1366be1207fe45d49ec12fff3b4496df1ed9db2dc382cc234b87b47c19e53687b29a75f14",
            "file": "src/app/Directivas/size.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\r\nimport { Component } from '../interfaces/Component';\r\n@Directive({\r\n  selector: '[size]',\r\n})\r\nexport class SizeDirective implements Component {\r\n  constructor(private el: ElementRef) {}\r\n  button: string = 'button';\r\n  matChip: string = 'mat-chip';\r\n  matChipOption: string = 'mat-chip-option';\r\n  matFormField: string = 'mat-form-field';\r\n  matCheckBox: string = 'mat-checkbox';\r\n  matSlider: string = 'mat-slider';\r\n  matRadioButton: string = 'mat-radio-button';\r\n  matSpinner: string = 'mat-spinner';\r\n  table: string = 'table';\r\n  matTable: string = 'mat-table';\r\n  matIcon: string = 'mat-icon';\r\n\r\n  @Input() size!: string;\r\n  ngOnChanges() {\r\n    let element = this.el.nativeElement;\r\n    switch (this.size) {\r\n      case 'small':\r\n        {\r\n          this.button = element.classList.add('small');\r\n          this.matChip = element.classList.add('small');\r\n          this.matChipOption = element.classList.add('small');\r\n          this.matFormField = element.classList.add('small');\r\n          this.matCheckBox = element.classList.add('small');\r\n          this.matRadioButton = element.classList.add('small');\r\n          this.matSlider = element.classList.add('small');\r\n          this.matSpinner = element.classList.add('small');\r\n          this.table = element.classList.add('small');\r\n          this.matTable = element.classList.add('small');\r\n          this.matIcon = element.classList.add('small');\r\n        }\r\n        return;\r\n      case 'large':\r\n        {\r\n          this.button = element.classList.add('large');\r\n          this.matCheckBox = element.classList.add('large');\r\n          this.matRadioButton = element.classList.add('large');\r\n          this.matIcon = element.classList.add('large');\r\n        }\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n}\r\n",
            "selector": "[size]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "button",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "matCheckBox",
                    "defaultValue": "'mat-checkbox'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "matChip",
                    "defaultValue": "'mat-chip'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "matChipOption",
                    "defaultValue": "'mat-chip-option'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "matFormField",
                    "defaultValue": "'mat-form-field'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "matIcon",
                    "defaultValue": "'mat-icon'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "matRadioButton",
                    "defaultValue": "'mat-radio-button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "matSlider",
                    "defaultValue": "'mat-slider'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "matSpinner",
                    "defaultValue": "'mat-spinner'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "matTable",
                    "defaultValue": "'mat-table'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "table",
                    "defaultValue": "'table'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "Component"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-0a7ed592c9aed50fcad0136dc21fb0c5fa6f4317973c9f6a45201bfe6bdac7cbbfe7b45b5ef7e69461bb6e97c59474e9d7432412102a9556b5f0ee161e4b0e97",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": ""
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-f4d03c6987dfdcc1cfdf7707d21b0f655a1912fbdf8bab37214c74fef2c004a56e7adc0245c10fc95dbd82b70f5ea28b91a022c4bbab52480556198168676f9a",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "template": "<button mat-button [ngClass]=\"classes\">{{ label }}</button>",
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "tipo",
                    "defaultValue": "'raised'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-button',\r\n  templateUrl: './button.component.html',\r\n  template: `<button mat-button [ngClass]=\"classes\">{{ label }}</button>`,\r\n  styleUrls: ['./button.component.scss'],\r\n})\r\nexport class ButtonComponent {\r\n  @Input() label = 'Button';\r\n\r\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  @Input() tipo: 'raised' = 'raised';\r\n\r\n  public get classes(): string[] {\r\n    return [\r\n      'app-button',\r\n      `app-button--${this.size}` || 'app-button',\r\n      `app-button--${this.tipo}`,\r\n    ];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-button--small {\r\n  font-size: 13px;\r\n  height: 32px;\r\n  padding-inline: 8px;\r\n}\r\n.app-button--medium {\r\n  font-size: 14px;\r\n  padding: 15px 15px;\r\n}\r\n.app-button--large {\r\n  font-size: 15px;\r\n  padding: 19px 18px;\r\n}\r\n.app-button--raised {\r\n  background-color: #3f51b5;\r\n  color: white !important;\r\n  font-weight: 600;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 16
                    }
                }
            },
            "templateData": ""
        },
        {
            "name": "FormFieldComponent",
            "id": "component-FormFieldComponent-fe18e7438c3cb791fedd1140967dc93b9fa94dde0fac996915388063c5df07046a769660ce91826149123d047fe2d15b036fb9cf672de38beacb52891a465f27",
            "file": "src/app/components/form-field/form-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "Form-field",
            "styleUrls": [
                "../../../styles/main.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-field.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Form-field'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'small' || 'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'Form-field',\r\n  templateUrl: './form-field.component.html',\r\n  styleUrls: ['../../../styles/main.scss'],\r\n})\r\nexport class FormFieldComponent {\r\n  @Input() label: string = 'Form-field';\r\n\r\n  @Input() size: string = 'small' || 'medium';\r\n\r\n  public get classes(): string[] {\r\n    return ['Form-field', `app-form-field--${this.size}`];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "//Component size\r\n@import \"componentsSize.scss\";\r\n// TYPOGRAPHY CONFIGURATION\r\n@import \"./typography.scss\";\r\n",
                    "styleUrl": "../../../styles/main.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 13
                    }
                }
            },
            "templateData": "<mat-form-field [ngClass]=\"classes\" appearance=\"fill\">\r\n  <mat-label>{{label}}</mat-label>\r\n  <input matInput placeholder=\"{{label}}\" size=\"small\">\r\n</mat-form-field>\r\n"
        },
        {
            "name": "MatChipComponent",
            "id": "component-MatChipComponent-3cd027e257f49593a89652e36f7e90e64c3961d81b4680697bc561ef10e601493a23c6704a30d00250ce8ffde7a2396baf1c8a36a69eb8297f935143ad06ef31",
            "file": "src/app/components/mat-chip/mat-chip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "Mat-chip",
            "styleUrls": [
                "../../../styles/main.scss"
            ],
            "styles": [],
            "template": "<mat-chip [ngClass]=\"classes\">{{ label }}</mat-chip>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Mat-Chip'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'small' || 'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'Mat-chip',\r\n  template: `<mat-chip [ngClass]=\"classes\">{{ label }}</mat-chip> `,\r\n  styleUrls: ['../../../styles/main.scss'],\r\n})\r\nexport class MatChipComponent {\r\n  @Input() label: string = 'Mat-Chip';\r\n\r\n  @Input() size: string = 'small' || 'medium';\r\n\r\n  public get classes(): string[] {\r\n    return ['Mat-chip', `app-mat-chip--${this.size}`];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "//Component size\r\n@import \"componentsSize.scss\";\r\n// TYPOGRAPHY CONFIGURATION\r\n@import \"./typography.scss\";\r\n",
                    "styleUrl": "../../../styles/main.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 13
                    }
                }
            }
        },
        {
            "name": "MatChipOptionComponent",
            "id": "component-MatChipOptionComponent-b62409cc3b5200e63393dafb965fcadfac34c425c0bcd559b18a25667d364208321a13e98730bfd8f9bf5765d378a01ef485174d010474dad738b57e00010af0",
            "file": "src/app/components/mat-chip-option/mat-chip-option.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "Mat-chip-option",
            "styleUrls": [
                "../../../styles/main.scss"
            ],
            "styles": [],
            "template": "<mat-chip-option [ngClass]=\"classes\">{{    label\n  }}</mat-chip-option>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'mat-chip-option'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'small' || 'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'Mat-chip-option',\r\n  template: `<mat-chip-option [ngClass]=\"classes\">{{\r\n    label\r\n  }}</mat-chip-option> `,\r\n  styleUrls: ['../../../styles/main.scss'],\r\n})\r\nexport class MatChipOptionComponent {\r\n  @Input() label: string = 'mat-chip-option';\r\n\r\n  @Input() size: string = 'small' || 'medium';\r\n\r\n  public get classes(): string[] {\r\n    return ['Mat-chip-option', `mat-chip-option--${this.size}`];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "//Component size\r\n@import \"componentsSize.scss\";\r\n// TYPOGRAPHY CONFIGURATION\r\n@import \"./typography.scss\";\r\n",
                    "styleUrl": "../../../styles/main.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            }
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-8dd372a6f3771fef97a682a1a2c60f07c76d17c2156023411cc6cc25a6fceef387331a251fe20e957fd92c6b81fb587aac5c43fda7ae5d1a24aca9a143d2433a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppComponent } from './app.component';\r\nimport { SizeDirective } from './Directivas/size.directive';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ButtonComponent } from './components/button/button.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, SizeDirective, ButtonComponent],\r\n  imports: [BrowserModule, AppRoutingModule, BrowserAnimationsModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "SizeDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "size",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/mat-chip-option/mat-chip-option.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "size",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/mat-chip/mat-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "size",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/form-field/form-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "size",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/mat-chip-option/mat-chip-option.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MatChipOptionComponent>",
                "defaultValue": "(args: MatChipOptionComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/mat-chip/mat-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MatChipComponent>",
                "defaultValue": "(args: MatChipComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/form-field/form-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FormFieldComponent>",
                "defaultValue": "(args: MatFormFieldModule) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/components/mat-chip-option/mat-chip-option.component.stories.ts": [
                {
                    "name": "size",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/mat-chip-option/mat-chip-option.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/mat-chip-option/mat-chip-option.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MatChipOptionComponent>",
                    "defaultValue": "(args: MatChipOptionComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/components/mat-chip/mat-chip.component.stories.ts": [
                {
                    "name": "size",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/mat-chip/mat-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/mat-chip/mat-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MatChipComponent>",
                    "defaultValue": "(args: MatChipComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/components/form-field/form-field.component.stories.ts": [
                {
                    "name": "size",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/form-field/form-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/form-field/form-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FormFieldComponent>",
                    "defaultValue": "(args: MatFormFieldModule) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/components/button/button.component.stories.ts": [
                {
                    "name": "size",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/Directivas/size.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SizeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "size",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/form-field/form-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "size",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/form-field/form-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/form-field/form-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-chip-option/mat-chip-option.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "size",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-chip-option/mat-chip-option.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-chip-option/mat-chip-option.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatChipOptionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-chip/mat-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "size",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-chip/mat-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-chip/mat-chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/Component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Component",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            }
        ]
    }
}